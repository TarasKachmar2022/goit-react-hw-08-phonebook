{"version":3,"file":"static/js/885.2206113e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/CloseBtn/CloseBtn.styled.js","components/CloseBtn/CloseBtn.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.Styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  ErrorMessage as FormikErrorMessage,\n  Field,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  @media screen and (min-width: 320px) {\n    text-align: center;\n    width: 290px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 330px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 24px 48px;\n    width: 550px;\n  }\n`;\n\nexport const FormLabelSpan = styled.span`\n  display: flex;\n  font-weight: 600;\n  text-align: start;\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 18px;\n    margin-bottom: 5px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 21px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const FormLabelIcon = styled.div`\n  margin: 0 10px;\n\n  & svg {\n    font-size: 18px;\n    filter: drop-shadow(0 0 5px #fff);\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n`;\n\nexport const InputField = styled(Field)`\n  background-color: rgba(255, 255, 255, 80%);\n  line-height: 1.5;\n  padding-left: 10px;\n  border-radius: 7px;\n  border: 0;\n  outline: 0;\n  box-shadow: 0.5px 0.5px 1px #000;\n  margin-bottom: 3px;\n\n  @media screen and (min-width: 320px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const FormBtn = styled.button`\n  font-weight: 700;\n  border: 1px solid ${p => p.theme.colors.grey};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.darkGrey};\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  :active {\n    scale: 0.95;\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  @media screen and (min-width: 320px) {\n    font-size: 16px;\n    border-radius: 7px;\n    padding: 7px 15px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    border-radius: 10px;\n    padding: 9px 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    border-radius: 10px;\n    padding: 10px 20px;\n  }\n`;\n\nexport const FormBtnText = styled.span`\n  margin-left: 10px;\n`;\n\nexport const FormBtnWrapper = styled.span`\n  display: flex;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectCurrentContacts = state => state.contacts.items;\n\nexport const filteredContacts = state =>\n  [...state.contacts.items].sort((first, last) =>\n    first.name.localeCompare(last.name)\n  );\n\nexport const selectVisibleContacts = createSelector(\n  [filteredContacts, selectFilter],\n  (contacts, selectFilter) => {\n    const normalize = selectFilter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalize)\n    );\n\n    return visibleContacts;\n  }\n);\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Form,\n  FormLabel,\n  FormLabelSpan,\n  FormLabelIcon,\n  FormBtnText,\n  InputField,\n  ErrorMessage,\n  FormBtn,\n  FormBtnWrapper,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport { FaUser } from 'react-icons/fa';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nconst ContactForm = () => {\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const [isAdding, setIsAdding] = useState(false);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const findContacts = contacts.find(\n      contact =>\n        contact.name.toLowerCase().trim() === values.name.toLowerCase().trim()\n    );\n\n    if (findContacts) {\n      toast.error(`${findContacts.name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    handleAddBtn(newContact);\n    resetForm();\n  };\n\n  const handleAddBtn = async newContact => {\n    try {\n      setIsAdding(true);\n      await dispatch(addContact(newContact));\n      setIsAdding(false);\n    } catch (error) {\n      toast.error(error.message);\n      setIsAdding(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormLabel htmlFor=\"name\">\n          <FormLabelSpan>\n            <FormLabelIcon>\n              <FaUser />\n            </FormLabelIcon>\n            Name\n          </FormLabelSpan>\n          <InputField\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n          />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </FormLabel>\n        <FormLabel htmlFor=\"number\">\n          <FormLabelSpan>\n            <FormLabelIcon>\n              <BsTelephoneFill />\n            </FormLabelIcon>\n            Number\n          </FormLabelSpan>\n          <InputField\n            id=\"number\"\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"+38(012)345-67-89\"\n          />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </FormLabel>\n        <FormBtn type=\"submit\">\n          {(isAdding && (\n            <FormBtnWrapper>\n              <ThreeDots height=\"20\" width=\"20\" color=\"white\" />\n              <FormBtnText>Add contact</FormBtnText>\n            </FormBtnWrapper>\n          )) || (\n            <>\n              <IoMdPersonAdd />\n              <FormBtnText>Add contact</FormBtnText>\n            </>\n          )}\n        </FormBtn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  background-color: rgba(255, 255, 255, 80%);\n  line-height: 1.5;\n  padding-left: 10px;\n  border-radius: 7px;\n  border: 0;\n  outline: 0;\n  box-shadow: 0.5px 0.5px 1px #000;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 320px) {\n    width: 290px;\n    font-size: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 330px;\n    font-size: 22px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 350px;\n    font-size: 24px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filter-slice';\nimport { FilterInput } from './ContactsFilter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst ContactsFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilterValue = event => {\n    const { value } = event.currentTarget;\n\n    dispatch(setFilter(value.toLowerCase().trim()));\n  };\n\n  return (\n    <FilterInput\n      type=\"text\"\n      value={filter}\n      onChange={changeFilterValue}\n      placeholder=\"Find contacts by name\"\n    ></FilterInput>\n  );\n};\n\nContactsFilter.propTypes = {\n  filter: PropTypes.string,\n  changeFilterValue: PropTypes.func,\n};\n\nexport default ContactsFilter;\n","import styled from 'styled-components';\nimport { Field, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const MainTitle = styled.h1`\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 28px;\n    margin-top: 10px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-top: 28px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 42px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n`;\n\nexport const FormLabelIcon = styled.div`\n  margin: 0 10px;\n\n  & svg {\n    font-size: 18px;\n    filter: drop-shadow(0 0 5px #fff);\n  }\n`;\n\nexport const FormLabelSpan = styled.span`\n  display: flex;\n  font-weight: 600;\n  text-align: start;\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 18px;\n    margin-bottom: 5px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 21px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const InputField = styled(Field)`\n  background-color: rgba(255, 255, 255, 80%);\n  line-height: 1.5;\n  padding-left: 10px;\n  border-radius: 7px;\n  border: 0;\n  outline: 0;\n  box-shadow: 0.5px 0.5px 1px #000;\n  margin-bottom: 3px;\n\n  @media screen and (min-width: 320px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const FormBtn = styled.button`\n  font-weight: 700;\n  border: 1px solid ${p => p.theme.colors.grey};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.darkGrey};\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  :active {\n    scale: 0.95;\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  @media screen and (min-width: 320px) {\n    font-size: 16px;\n    border-radius: 7px;\n    padding: 7px 15px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    border-radius: 10px;\n    padding: 9px 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    border-radius: 10px;\n    padding: 10px 20px;\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  MainTitle,\n  FormLabel,\n  FormLabelIcon,\n  FormLabelSpan,\n  InputField,\n  ErrorMessage,\n  FormBtn,\n} from '../../components/ModalForm/ModalForm.styled';\nimport { FaUser } from 'react-icons/fa';\nimport { BsTelephoneFill } from 'react-icons/bs';\nimport { FaEdit } from 'react-icons/fa';\nimport { updateContact } from '../../redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nconst ModalForm = ({ id, name, number, onClose }) => {\n  const initialValues = { name: name, number: number };\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    const newContact = {\n      id: id,\n      ...values,\n    };\n    dispatch(updateContact(newContact));\n    onClose();\n  };\n\n  return (\n    <>\n      <MainTitle>Edit contact</MainTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <FormLabel htmlFor=\"name\">\n            <FormLabelSpan>\n              <FormLabelIcon>\n                <FaUser />\n              </FormLabelIcon>\n              Name\n            </FormLabelSpan>\n            <InputField\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </FormLabel>\n\n          <FormLabel htmlFor=\"number\">\n            <FormLabelSpan>\n              <FormLabelIcon>\n                <BsTelephoneFill />\n              </FormLabelIcon>\n              Number\n            </FormLabelSpan>\n            <InputField\n              id=\"number\"\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter number\"\n            />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </FormLabel>\n          <FormBtn type=\"submit\">\n            <span>\n              <FaEdit />{' '}\n            </span>\n            Edit\n          </FormBtn>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nModalForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ModalForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const ModalCloseBtn = styled.div`\n  position: absolute;\n  top: -18px;\n  right: -40px;\n  padding: 5px;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: white;\n  transition: color linear 400ms;\n  z-index: 1300;\n\n  &:hover {\n    color: orange;\n  }\n\n  &:focus {\n    color: orange;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { Container, ModalCloseBtn } from './CloseBtn.styled';\n\nconst CloseBtn = ({ onClose }) => {\n  const Close = () => {\n    console.log(onClose);\n    onClose();\n  };\n  return (\n    <Container onClick={Close}>\n      <ModalCloseBtn>\n        <AiOutlineCloseCircle />\n      </ModalCloseBtn>\n    </Container>\n  );\n};\n\nCloseBtn.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default CloseBtn;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalContainer = styled.div`\n  background-image: url('https://pixabay.com/get/g3f529f6d1373745a3b160ff3ad97d8a6a167b3bd43ae347e8c013a244ea2858f7a27476914ed1fe6818ce581dd1d71d1b5579539e8c15aa3be9b684030a0ec16_1280.jpg');\n  border: 5px solid darkgrey;\n  border-radius: 7px;\n\n  @media screen and (min-width: 320px) {\n    text-align: center;\n    width: 290px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 330px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 24px 48px;\n    width: 550px;\n    height: 450px;\n  }\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport ModalForm from 'components/ModalForm';\nimport CloseBtn from '../CloseBtn/CloseBtn';\nimport { Overlay, ModalContainer } from 'components/Modal/Modal.styled';\n\nconst rootModal = document.querySelector('#rootModal');\n\nconst Modal = ({ id, name, number, onClose }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClose = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClose}>\n      <ModalContainer>\n        <CloseBtn onClose={onClose} />\n        <ModalForm id={id} name={name} number={number} onClose={onClose} />\n      </ModalContainer>\n    </Overlay>,\n    rootModal\n  );\n};\n\nModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-shadow: 0 0.4px 0.4px #000;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 0;\n  }\n`;\n\nexport const ContactContainer = styled.div`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: start;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ContactTitle = styled.span`\n  @media screen and (min-width: 320px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    font-weight: 600;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    font-weight: 600;\n    align-self: center;\n  }\n`;\n\nexport const ContactNumber = styled.span`\n  @media screen and (min-width: 320px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n    margin-left: 10px;\n  }\n`;\n\nexport const ContactsBtnWrap = styled.div`\n  display: flex;\n`;\n\nexport const EditBtn = styled.button`\n  background-color: ${p => p.theme.colors.darkGrey};\n  border-radius: 10px;\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.darkGrey};\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  :active {\n    scale: 0.95;\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  @media screen and (min-width: 320px) {\n    padding: 10px 15px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 6px 10px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 6px 10px;\n    text-align: end;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  background-color: ${p => p.theme.colors.darkGrey};\n  border-radius: 10px;\n  margin-left: 3px;\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.darkGrey};\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.error};\n  }\n\n  :active {\n    scale: 0.95;\n    background-color: ${p => p.theme.colors.error};\n  }\n\n  @media screen and (min-width: 320px) {\n    padding: 10px 15px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 6px 10px;\n    margin-left: 5px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 6px 10px;\n    margin-left: 5px;\n    text-align: end;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { IoPersonRemove } from 'react-icons/io5';\nimport { FaEdit } from 'react-icons/fa';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Modal from '../Modal';\nimport {\n  ContactItem,\n  ContactContainer,\n  ContactTitle,\n  ContactNumber,\n  ContactsBtnWrap,\n  DeleteBtn,\n  EditBtn,\n} from './ContactCard.styled';\nimport { useState } from 'react';\n\nconst ContactCard = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [openModal, setOpenModal] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const showModal = () => {\n    setOpenModal(true);\n  };\n\n  const closeModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      setIsDeleting(true);\n      await dispatch(deleteContact(id));\n      setIsDeleting(false);\n    } catch (error) {\n      toast.error(error.message);\n      setIsDeleting(false);\n    }\n  };\n\n  return (\n    <ContactItem>\n      <ContactContainer>\n        <ContactTitle>{name}:</ContactTitle>\n        <ContactNumber>{number}</ContactNumber>\n      </ContactContainer>\n      <ContactsBtnWrap>\n        <EditBtn type=\"button\" onClick={() => showModal()}>\n          {(openModal && (\n            <ThreeDots height=\"20\" width=\"16\" color=\"white\" />\n          )) || <FaEdit />}\n          {openModal && (\n            <Modal id={id} name={name} number={number} onClose={closeModal} />\n          )}\n        </EditBtn>\n        <DeleteBtn type=\"button\" onClick={() => handleDelete(id)}>\n          {(isDeleting && (\n            <ThreeDots height=\"20\" width=\"16\" color=\"white\" />\n          )) || <IoPersonRemove />}\n        </DeleteBtn>\n      </ContactsBtnWrap>\n    </ContactItem>\n  );\n};\n\nContactCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n  max-width: 100%;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 320px) {\n    width: 290px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 450px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 550px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport ContactCard from '../ContactCard';\nimport { List } from './ContactList.Styled';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactCard key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n  backdrop-filter: blur(7.5px);\n  box-shadow: rgb(0, 0, 0) 0px 0px 80px;\n  min-height: 82vh;\n\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 300px;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 440px;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 5px;\n    padding: 20px;\n    width: 650px;\n  }\n`;\n\nexport const MainTitle = styled.h1`\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 32px;\n    margin-top: 10px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n    margin-top: 28px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 38px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 32px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 34px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 38px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Toaster, toast } from 'react-hot-toast';\nimport ContactForm from 'components/ContactForm';\nimport ContactsFilter from 'components/ContactsFilter';\nimport ContactList from 'components/ContactList';\nimport { MainBlock, MainTitle, Title } from './ContactsPage.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error('Oops, something went wrong, please try again!');\n  }, [error]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <MainBlock>\n        <MainTitle>Add contact</MainTitle>\n        <ContactForm />\n        <Title>Contacts</Title>\n        <ContactsFilter />\n        <ContactList />\n      </MainBlock>\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","FormikForm","FormLabelSpan","p","theme","shadows","textShadow","FormLabelIcon","FormLabel","InputField","Field","ErrorMessage","FormikErrorMessage","colors","error","FormBtn","grey","white","darkGrey","orange","FormBtnText","FormBtnWrapper","selectContacts","state","contacts","items","selectError","selectFilter","filter","selectVisibleContacts","createSelector","sort","first","last","name","localeCompare","normalize","toLowerCase","contact","includes","schema","yup","shape","required","number","useState","isAdding","setIsAdding","useSelector","dispatch","useDispatch","handleAddBtn","newContact","addContact","toast","message","initialValues","validationSchema","onSubmit","values","resetForm","findContacts","find","trim","htmlFor","id","type","placeholder","component","height","width","color","FilterInput","value","onChange","event","currentTarget","setFilter","MainTitle","onClose","updateContact","Container","ModalCloseBtn","onClick","console","log","Overlay","ModalContainer","rootModal","document","querySelector","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","ContactItem","ContactContainer","ContactTitle","ContactNumber","ContactsBtnWrap","EditBtn","DeleteBtn","openModal","setOpenModal","isDeleting","setIsDeleting","handleDelete","deleteContact","List","visibleContacts","map","MainBlock","Title","fetchContacts","position"],"sourceRoot":""}