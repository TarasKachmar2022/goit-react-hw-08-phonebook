{"version":3,"file":"static/js/830.2645609c.chunk.js","mappings":"qTAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iRAcJE,EAAYF,EAAAA,GAAAA,GAAH,6SACL,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,UAApB,IAeLC,EAAiBP,EAAAA,GAAAA,MAAH,6FAMdQ,EAAqBR,EAAAA,GAAAA,KAAH,+WAId,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,UAApB,IAeLG,EAAiBT,EAAAA,GAAAA,KAAH,2HASdU,GAAkBV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,qbAqBfY,GAAeZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,uCACd,SAAAG,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,KAAnB,IAGCC,EAAehB,EAAAA,GAAAA,OAAH,yoBAGH,SAAAG,GAAC,OAAIA,EAAEC,MAAMU,OAAOG,IAAnB,IACZ,SAAAd,GAAC,OAAIA,EAAEC,MAAMU,OAAOI,KAAnB,IACU,SAAAf,GAAC,OAAIA,EAAEC,MAAMU,OAAOK,QAAnB,IAIC,SAAAhB,GAAC,OAAIA,EAAEC,MAAMU,OAAOM,MAAnB,IAKD,SAAAjB,GAAC,OAAIA,EAAEC,MAAMU,OAAOM,MAAnB,IAmBZC,EAAmBrB,EAAAA,GAAAA,KAAH,6CAIhBsB,EAAqBtB,EAAAA,GAAAA,IAAH,uFAMlBuB,EAAoBvB,EAAAA,GAAAA,KAAH,6CAIjBwB,EAAmBxB,EAAAA,GAAAA,IAAH,6F,SCvHvByB,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IAEvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaH,QAAQK,SAAS,2BACrCJ,SAAUE,EAAAA,KAEPG,IAAI,EAAG,sDACPD,SAAS,6BAqEd,EAlEkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,SAAChC,EAAD,sBACA,SAAC,KAAD,CACEuB,cAAeA,EACfU,iBAAkBP,EAClBQ,SAXe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAKG,UAKE,UAACvC,EAAD,YACE,UAACQ,EAAD,CAAgBiC,QAAQ,QAAxB,WACE,UAAChC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,MAAD,MAFJ,YAMA,SAACC,EAAD,CACE+B,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,WAAS,EACTC,YAAY,iBAEd,SAACjC,EAAD,CAAc+B,KAAK,QAAQG,UAAU,YAEvC,UAACvC,EAAD,CAAgBiC,QAAQ,WAAxB,WACE,UAAChC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,MAAD,MAFJ,eAMA,SAACC,EAAD,CACE+B,GAAG,WACHC,KAAK,WACLC,KAAK,WACLE,YAAY,oBAEd,SAACjC,EAAD,CAAc+B,KAAK,WAAWG,UAAU,YAE1C,UAACtB,EAAD,YACE,UAACF,EAAD,YACE,oDACA,SAACC,EAAD,WACE,SAAC,KAAD,CAAMwB,GAAE,UAAKC,EAAAA,EAAAA,UAAb,4BAGJ,UAAChC,EAAD,CAAc0B,KAAK,SAAnB,WACE,SAAC,MAAD,KACA,SAACrB,EAAD,kCAOb,EChGY4B,EAAiBjD,EAAAA,GAAAA,IAAH,+nBCS3B,EARkB,WAChB,OACE,SAACiD,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  @media screen and (min-width: 320px) {\n    text-align: center;\n    width: 290px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 330px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 24px 48px;\n    width: 550px;\n  }\n`;\n\nexport const MainTitle = styled.h1`\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 28px;\n    margin-top: 10px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    margin-top: 28px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 42px;\n  }\n`;\n\nexport const LoginFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nexport const LoginFormLabelSpan = styled.span`\n  display: flex;\n  font-weight: 600;\n  text-align: start;\n  text-shadow: ${p => p.theme.shadows.textShadow};\n\n  @media screen and (min-width: 320px) {\n    font-size: 18px;\n    margin-bottom: 5px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 21px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const LoginLabelIcon = styled.span`\n  margin: 0 10px;\n\n  & svg {\n    font-size: 18px;\n    filter: drop-shadow(0 0 5px #fff);\n  }\n`;\n\nexport const LoginInputField = styled(Field)`\n  background-color: rgba(255, 255, 255, 80%);\n  line-height: 1.5;\n  padding-left: 10px;\n  border-radius: 7px;\n  border: 0;\n  outline: 0;\n  box-shadow: 0.5px 0.5px 1px #000;\n  margin-bottom: 3px;\n\n  @media screen and (min-width: 320px) {\n    font-size: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 22px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const LoginFormBtn = styled.button`\n  display: flex;\n  font-weight: 700;\n  border: 1px solid ${p => p.theme.colors.grey};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.darkGrey};\n  transition: background-color 250ms linear;\n\n  :hover {\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  :active {\n    scale: 0.95;\n    background-color: ${p => p.theme.colors.orange};\n  }\n\n  @media screen and (min-width: 320px) {\n    font-size: 16px;\n    border-radius: 7px;\n    padding: 7px 15px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    border-radius: 10px;\n    padding: 9px 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    border-radius: 10px;\n    padding: 10px 20px;\n  }\n`;\nexport const LoginFormBtnText = styled.span`\n  margin-left: 3px;\n`;\n\nexport const LoginFormLoginLink = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n  font-weight: 600;\n`;\n\nexport const LoginRegisterLink = styled.span`\n  margin-left: 5px;\n`;\n\nexport const LoginFormBtnWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport routes from 'routes';\nimport { RiLoginBoxLine } from 'react-icons/ri';\nimport { MdEmail } from 'react-icons/md';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { login } from '../../redux/auth/auth-operations';\nimport {\n  Form,\n  MainTitle,\n  LoginFormLabel,\n  LoginFormLabelSpan,\n  LoginLabelIcon,\n  LoginInputField,\n  ErrorMessage,\n  LoginFormLoginLink,\n  LoginRegisterLink,\n  LoginFormBtnWrap,\n  LoginFormBtn,\n  LoginFormBtnText,\n} from './LoginForm.styled';\n\nconst initialValues = { email: '', password: '' };\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required('This field is required!'),\n  password: yup\n    .string()\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .required('This field is required!'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(login(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <MainTitle>Log In</MainTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <LoginFormLabel htmlFor=\"email\">\n            <LoginFormLabelSpan>\n              <LoginLabelIcon>\n                <MdEmail />\n              </LoginLabelIcon>\n              Email\n            </LoginFormLabelSpan>\n            <LoginInputField\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              autoFocus\n              placeholder=\"Enter email\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </LoginFormLabel>\n          <LoginFormLabel htmlFor=\"password\">\n            <LoginFormLabelSpan>\n              <LoginLabelIcon>\n                <RiLockPasswordFill />\n              </LoginLabelIcon>\n              Password\n            </LoginFormLabelSpan>\n            <LoginInputField\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </LoginFormLabel>\n          <LoginFormBtnWrap>\n            <LoginFormLoginLink>\n              <p> First time on Netflix?</p>\n              <LoginRegisterLink>\n                <Link to={`${routes.REGISTER}`}>Sign up.</Link>\n              </LoginRegisterLink>\n            </LoginFormLoginLink>\n            <LoginFormBtn type=\"submit\">\n              <RiLoginBoxLine />\n              <LoginFormBtnText>Log in</LoginFormBtnText>\n            </LoginFormBtn>\n          </LoginFormBtnWrap>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const LoginMainBlock = styled.div`\n  backdrop-filter: blur(7.5px);\n  box-shadow: rgb(0, 0, 0) 0px 0px 80px;\n\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 300px;\n    min-height: 86vh;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 440px;\n    min-height: 85vh;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 5px;\n    padding: 20px;\n    width: 650px;\n    min-height: 83vh;\n  }\n`;\n","import LoginForm from 'components/LoginForm';\nimport { LoginMainBlock } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <LoginMainBlock>\n      <LoginForm />\n    </LoginMainBlock>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","FormikForm","MainTitle","p","theme","shadows","textShadow","LoginFormLabel","LoginFormLabelSpan","LoginLabelIcon","LoginInputField","Field","ErrorMessage","FormikErrorMessage","colors","error","LoginFormBtn","grey","white","darkGrey","orange","LoginFormBtnText","LoginFormLoginLink","LoginRegisterLink","LoginFormBtnWrap","initialValues","email","password","schema","yup","shape","required","min","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","login","htmlFor","id","type","name","autoFocus","placeholder","component","to","routes","LoginMainBlock"],"sourceRoot":""}